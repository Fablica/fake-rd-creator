{"version":3,"sources":["helpers/history.js","components/PageHeader/PageHeader.jsx","components/TopPage/TopPage.jsx","components/StepHeader/StepHeader.jsx","components/SelectedTableForm/SelectedTableForm.jsx","components/SelectedColumnItem/SelectedColumnItem.jsx","components/SelectedColumnForm/SelectedColumnForm.jsx","components/SelectedFileTypeForm/SelectedFileTypeForm.jsx","helpers/generateData.js","components/HomePage/HomePage.jsx","components/NotFoundPage/NotFoundPage.jsx","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","PageHeader","react_default","a","createElement","Menu","fixed","inverted","Item","as","Link","to","header","style","marginLeft","position","href","Image","size","src","marginRight","TopPage","className","StepHeader","_ref","showStepCategory","ChangeShowStepper","Step","Group","ordered","active","onClick","Content","Title","Description","SelectedTableForm","createTableDetailed","ChangeSelectedTable","Table","color","Header","Row","HeaderCell","Body","Object","keys","map","table","index","key","Cell","Checkbox","slider","checked","createFlg","onChange","SelectedColumnItem","openedAccordionItem","ChangeSelectedColumn","Accordion","column","clm","SelectedColumnForm","ChangeOpenAccordion","fluid","styled","Icon","name","components_SelectedColumnItem_SelectedColumnItem","SelectedFileTypeForm","outputFileTypes","ChangeSelectedFileType","lineLength","ClickGenerateButton","indexOf","Button","disabled","length","generateData","console","log","tableList","columnList","dataLine","i","switchCreateData","push","columnName","faker","random","uuid","firstName","lastName","internet","userName","password","avatar","email","phone","phoneNumberFormat","address","streetAddress","company","companyName","lorem","sentence","slug","paragraph","text","HomePage","state","users","userId","fullName","loginId","avatarURL","phoneNumber","posts","postId","handleChangeShowStepper","selectedStep","_this","setState","handleChangeOpenAccordion","openItem","handleChangeSelectedTable","selectedTable","changedCreateTableDetailed","handleChangeSelectedColumn","selectedColumn","handleChangeSelectedFileType","selectedFileType","filteredFileTypes","filter","fileType","addingFileType","handleOnClickGenerateButton","fileLink","document","window","btoa","unescape","encodeURIComponent","JSON","stringify","target","download","concat","body","appendChild","click","parentNode","removeChild","join","d","components_StepHeader_StepHeader","this","components_SelectedTableForm_SelectedTableForm","components_SelectedColumnForm_SelectedColumnForm","components_SelectedFileTypeForm_SelectedFileTypeForm","Component","NotFoundPage","App","BrowserRouter","components_PageHeader_PageHeader","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f8b99fd.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Image } from \"semantic-ui-react\";\n\nconst PageHeader = () => {\n  return (\n    <Menu fixed=\"top\" inverted>\n      <Menu.Item as={Link} to=\"/fake-rd-creator\" header style={{ marginLeft: \"0.5em\" }}>\n        TOP\n      </Menu.Item>\n      <Menu.Item as={Link} to=\"/fake-rd-creator/home\">\n        Home\n      </Menu.Item>\n      <Menu.Item position=\"right\">\n        <a href=\"https://github.com/Kento75/fake-rd-creator\">\n          <Image\n            size=\"mini\"\n            src=\"./assets/github.png\"\n            style={{ marginRight: \"0.5em\" }}\n          />\n        </a>\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default PageHeader;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst TopPage = () => {\n  return (\n    <div className=\"ui inverted vertical masthead center aligned segment\">\n      <div className=\"ui text container\">\n        <h1 className=\"ui inverted stackable header\">\n          <div className=\"content\">fake-rd-creator</div>\n        </h1>\n        <br />\n        <Link className=\"ui huge white inverted button\" to=\"/fake-rd-creator/home\">\n          Get Started\n          <i className=\"right arrow icon\" />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default TopPage;\n","import React from 'react';\nimport { Step } from \"semantic-ui-react\";\n\nconst StepHeader = ({ showStepCategory, ChangeShowStepper }) => {\n  return (\n    <Step.Group ordered>\n    <Step active={ showStepCategory === \"step1\" ? true : false} onClick={() => ChangeShowStepper(\"step1\")}>\n      <Step.Content>\n        <Step.Title>Step1</Step.Title>\n        <Step.Description>Select Table</Step.Description>\n      </Step.Content>\n    </Step>\n    <Step active={ showStepCategory === \"step2\" ? true : false} onClick={() => ChangeShowStepper(\"step2\")}>\n      <Step.Content>\n        <Step.Title>Step2</Step.Title>\n        <Step.Description>Select Column</Step.Description>\n      </Step.Content>\n    </Step>\n    <Step active={ showStepCategory === \"step3\" ? true : false} onClick={() => ChangeShowStepper(\"step3\")}>\n      <Step.Content>\n        <Step.Title>Step3</Step.Title>\n        <Step.Description>Select File Type</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n  )\n}\n\nexport default StepHeader\n","import React from \"react\";\nimport { Table, Checkbox } from \"semantic-ui-react\";\n\nconst SelectedTableForm = ({ createTableDetailed, ChangeSelectedTable }) => {\n  return (\n    <div>\n      <Table color=\"red\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Selected</Table.HeaderCell>\n            <Table.HeaderCell>Table</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {Object.keys(createTableDetailed).map((table, index) => (\n            <Table.Row key={index}>\n              <Table.Cell>\n                <Checkbox\n                  slider\n                  checked={createTableDetailed[table].createFlg}\n                  onChange={() => ChangeSelectedTable(table)}\n                />\n              </Table.Cell>\n              <Table.Cell>{table}</Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n\nexport default SelectedTableForm;\n","import React from \"react\";\nimport { Accordion, Table, Checkbox } from \"semantic-ui-react\";\n\nconst SelectedColumnItem = ({\n  openedAccordionItem,\n  table,\n  createTableDetailed,\n  ChangeSelectedColumn\n}) => {\n  return (\n    <Accordion.Content active={openedAccordionItem === table ? true : false}>\n      <Table color=\"red\">\n        {Object.keys(createTableDetailed[table].column).map((clm, index) => (\n          <Table.Body key={index}>\n            <Table.Row>\n              <Table.Cell>\n                <Checkbox slider checked={createTableDetailed[table].column[clm]} onChange={() => ChangeSelectedColumn(table, clm)} />\n              </Table.Cell>\n              <Table.Cell>{clm}</Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        ))}\n      </Table>\n    </Accordion.Content>\n  );\n};\n\nexport default SelectedColumnItem;\n","import React from \"react\";\nimport { Accordion, Icon } from \"semantic-ui-react\";\nimport SelectedColumnItem from \"../SelectedColumnItem/SelectedColumnItem\";\n\nconst SelectedColumnForm = ({\n  createTableDetailed,\n  openedAccordionItem,\n  ChangeOpenAccordion,\n  ChangeSelectedColumn\n}) => {\n  return (\n    <div>\n      {Object.keys(createTableDetailed).map(\n        (table, index) => {\n          return createTableDetailed[table].createFlg\n          ?\n            <Accordion fluid styled key={index}>\n              <Accordion.Title\n                active={openedAccordionItem === table ? true : false}\n                index={index}\n                onClick={() => ChangeOpenAccordion(table)}\n              >\n                <Icon name=\"dropdown\" />\n                {table}\n              </Accordion.Title>\n              <SelectedColumnItem\n                openedAccordionItem={openedAccordionItem}\n                table={table}\n                createTableDetailed={createTableDetailed}\n                ChangeSelectedColumn={ChangeSelectedColumn}\n              />\n            </Accordion>\n          : null\n      })}\n    </div>\n  );\n};\n\nexport default SelectedColumnForm;\n","import React from \"react\";\nimport { Dropdown, Menu, Table, Checkbox, Button } from \"semantic-ui-react\";\n\nconst SelectedFileTypeForm = ({outputFileTypes, lineLength, ChangeSelectedFileType, ClickGenerateButton}) => {\n  return (\n    <div>\n      <Table color=\"red\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Selected</Table.HeaderCell>\n            <Table.HeaderCell>File Type</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>\n              <Checkbox slider checked={outputFileTypes.indexOf(\"CSV\") >= 0 ? true : false} onChange={() => ChangeSelectedFileType(\"CSV\")} />\n            </Table.Cell>\n            <Table.Cell>CSV</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>\n              <Checkbox slider checked={outputFileTypes.indexOf(\"JSON\") >= 0 ? true : false} onChange={() => ChangeSelectedFileType(\"JSON\")} />\n            </Table.Cell>\n            <Table.Cell>JSON</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n      <br/>\n      {/* <Menu compact>\n        <Dropdown text='To create 1 lines' options={options} simple item />\n      </Menu> */}\n      <Button disabled={!outputFileTypes.length >= 1} color='red' onClick={() => ClickGenerateButton()}>GENERATE</Button>\n    </div>\n  );\n};\n\nexport default SelectedFileTypeForm;\n","import faker from \"faker\";\n\n\nexport const  generateData = (lineLength, createTableDetailed) => {\n  console.log(lineLength)\n  let tableList = {}\n  let columnList = {}\n\n  // create table list and column  list\n  Object.keys(createTableDetailed).map((table, index) => (\n    createTableDetailed[table].createFlg\n      ? columnList[table] = createTableDetailed[table].column\n      : null,\n    createTableDetailed[table].createFlg\n      ? tableList[table] = []\n      : null\n  ))\n\n  let dataLine = {}\n  // generate data\n  for(let table in columnList) {\n    for(let i = 0; i < lineLength; i++) {\n      for(let column in columnList[table]) {\n        if(columnList[table][column] === false) {\n          continue\n        }\n\n        dataLine[column] = switchCreateData(column)\n      }\n      tableList[table].push(dataLine)\n      dataLine = {}\n    }\n  }\n\n  return tableList;\n}\n\n\nexport const switchCreateData = (columnName) => {\n  switch (columnName) {\n  // User table columns\n  case \"userId\":\n    return faker.random.uuid()\n  case \"fullName\":\n    return faker.name.firstName() + \" \" + faker.name.lastName()\n  case \"loginId\":\n    return faker.internet.userName()\n  case \"password\":\n    return faker.internet.password()\n  case \"avatarURL\":\n    return faker.internet.avatar()\n  case \"email\":\n    return faker.internet.email()\n  case \"phoneNumber\":\n    return faker.phone.phoneNumberFormat()\n  case \"streetAddress\":\n    return faker.address.streetAddress()\n  case \"companyName\":\n    return faker.company.companyName()\n  // Post table columns\n  case \"postId\":\n    return faker.random.uuid()\n  case \"sentence\":\n    return faker.lorem.sentence()\n  case \"slug\":\n    return faker.lorem.slug()\n  case \"paragraph\":\n    return faker.lorem.paragraph()\n  case \"text\":\n    return faker.lorem.text()\n  default:\n    return null\n  }\n}","import React, { Component } from \"react\";\n\nimport StepHeader from \"../StepHeader/StepHeader\";\nimport SelectedTableForm from \"../SelectedTableForm/SelectedTableForm\";\nimport SelectedColumnForm from \"../SelectedColumnForm/SelectedColumnForm\";\nimport SelectedFileTypeForm from \"../SelectedFileTypeForm/SelectedFileTypeForm\";\nimport { generateData } from \"../../helpers/generateData\";\n\nclass HomePage extends Component {\n  state = {\n    createTableDetailed: {\n      // ユーザ一覧\n      users: {\n        createFlg: false,\n        column: {\n          userId: false, // random.uuid\n          fullName: false, // name.firstName + \" \" + name.lastName\n          loginId: false, // internet.userName\n          password: false, // internet.password\n          avatarURL: false, // internet.avatar\n          email: false, // internet.email\n          phoneNumber: false, // phone.phoneNumberFormat\n          streetAddress: false, // address.streetAddress\n          companyName: false // company.compayName\n        }\n      },\n      // 投稿\n      posts: {\n        createFlg: false,\n        column: {\n          userId: false, // random.uuid(usersの)\n          postId: false, // random.uuid\n          sentence: false, // lorem.sentence\n          slug: false, // lorem.slug\n          paragraph: false, // lorem.paragraph\n          text: false // lorem.text\n        }\n      }\n    },\n    showStepCategory: \"step1\",\n    openedAccordionItem: \"\",\n    outputFileTypes: [],\n    lineLength: 1000,\n  };\n\n  handleChangeShowStepper = selectedStep => {\n    this.setState({\n      showStepCategory: selectedStep\n    });\n  };\n\n  handleChangeOpenAccordion = openItem => {\n    if (this.state.openedAccordionItem === openItem) {\n      this.setState({\n        openedAccordionItem: \"\"\n      });\n    } else {\n      this.setState({\n        openedAccordionItem: openItem\n      });\n    }\n  };\n\n  handleChangeSelectedTable = selectedTable => {\n    let changedCreateTableDetailed = this.state.createTableDetailed;\n    if(this.state.createTableDetailed[selectedTable].createFlg !== false) {\n      changedCreateTableDetailed[selectedTable].createFlg = false;\n    } else {\n      changedCreateTableDetailed[selectedTable].createFlg = true;\n    }\n    this.setState({\n      createTableDetailed: changedCreateTableDetailed\n    });\n  };\n\n  handleChangeSelectedColumn = (selectedTable, selectedColumn) => {\n    let changedCreateTableDetailed = this.state.createTableDetailed;\n    if(this.state.createTableDetailed[selectedTable].column[selectedColumn] !== false) {\n      changedCreateTableDetailed[selectedTable].column[selectedColumn] = false;\n    } else {\n      changedCreateTableDetailed[selectedTable].column[selectedColumn] = true;\n    }\n    this.setState({\n      createTableDetailed: changedCreateTableDetailed\n    });\n  };\n\n  handleChangeSelectedFileType = selectedFileType => {\n    if (this.state.outputFileTypes.indexOf(selectedFileType) >= 0) {\n      let filteredFileTypes = this.state.outputFileTypes.filter(fileType => {\n        return fileType !== selectedFileType;\n      });\n\n      this.setState({\n        outputFileTypes: filteredFileTypes\n      });\n    } else {\n      let addingFileType = this.state.outputFileTypes;\n      addingFileType.push(selectedFileType);\n      this.setState({\n        outputFileTypes: addingFileType\n      });\n    }\n  };\n\n  handleOnClickGenerateButton = () => {\n    let tableList = generateData(this.state.lineLength, this.state.createTableDetailed)\n    let fileLink = document.createElement(\"a\");\n    if(this.state.outputFileTypes.indexOf(\"JSON\") >= 0) {\n      for(let i in tableList) {\n        fileLink.href = \"data:text/json;charset=utf-8;base64,\" + window.btoa(unescape(encodeURIComponent(JSON.stringify(tableList[i]))));\n        fileLink.target = \"_blank\";\n        fileLink.download = `${i}.json`;\n        document.body.appendChild(fileLink);\n        fileLink.click();\n        fileLink.parentNode.removeChild(fileLink);\n      }\n    }\n    if(this.state.outputFileTypes.indexOf(\"CSV\") >= 0) {\n      let header = null;\n      let body = null;\n      for(let i in tableList) {\n        header = Object.keys(tableList[i][0]).join(',') + \"\\n\";\n        body = tableList[i].map(function(d) {\n          return Object.keys(d).map(function(key) {\n              return d[key];\n          }).join(',');\n        }).join(\"\\n\");\n        \n        fileLink.href = \"data:text/csv;charset=utf-8;base64,\" + window.btoa(unescape(encodeURIComponent(header + body)));\n        fileLink.target = \"_blank\";\n        fileLink.download = `${i}.csv`;\n        document.body.appendChild(fileLink);\n        fileLink.click();\n        fileLink.parentNode.removeChild(fileLink);\n      }\n    }\n\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>HomePage</h1>\n        <StepHeader\n          showStepCategory={this.state.showStepCategory}\n          ChangeShowStepper={this.handleChangeShowStepper}\n        />\n        {this.state.showStepCategory === \"step1\" ? (\n          <SelectedTableForm createTableDetailed={this.state.createTableDetailed} ChangeSelectedTable={this.handleChangeSelectedTable} />\n        ) : this.state.showStepCategory === \"step2\" ? (\n          <SelectedColumnForm\n            createTableDetailed={this.state.createTableDetailed}\n            openedAccordionItem={this.state.openedAccordionItem}\n            ChangeOpenAccordion={this.handleChangeOpenAccordion}\n            ChangeSelectedColumn={this.handleChangeSelectedColumn}\n          />\n        ) : (\n          <SelectedFileTypeForm\n            outputFileTypes={this.state.outputFileTypes}\n            lineLength={this.state.lineLength}\n            ChangeSelectedFileType={this.handleChangeSelectedFileType}\n            ClickGenerateButton={this.handleOnClickGenerateButton}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFoundPage = () => {\n  return (\n    <div className=\"ui inverted vertical masthead center aligned segment\">\n      <div className=\"ui text container\">\n        <h1 className=\"ui inverted stackable header\">\n          <div className=\"content\">404 Not Found</div>\n        </h1>\n        <br />\n        <Link className=\"ui huge white inverted button\" to=\"/\">\n          Top Page\n          <i className=\"right arrow icon\" />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { history } from \"./helpers\";\nimport PageHeader from \"./components/PageHeader/PageHeader\";\nimport TopPage from \"./components/TopPage/TopPage\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport NotFoundPage from \"./components/NotFoundPage/NotFoundPage\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <div>\n          <PageHeader />\n          <Switch>\n            <Route exact path=\"/fake-rd-creator\" component={TopPage} />\n            <Route path=\"/fake-rd-creator/home\" component={HomePage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport \"./index.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}